[
  
  {
    "title": "PrimusC2 - New Release | Update 4.0",
    "url": "/posts/PrimusC2_update_4.0/",
    "categories": "PrimusC2, updates",
    "tags": "AD, Red Team, C2, PrimusC2, ExecuteAssembly, Caddy, Redirector, HTTPS",
    "date": "2024-03-19 00:00:00 +0100",
    





    
    "snippet": "Time for another update for PrimusC2. This update do not have as much content as the previous updates, but it has some stuff that greatly improves the maturity of the project.PrimusC2 Github linkWh...",
    "content": "Time for another update for PrimusC2. This update do not have as much content as the previous updates, but it has some stuff that greatly improves the maturity of the project.PrimusC2 Github linkWhat‚Äôs new:  HTTPS based implant üòé¬†  Smart Pipe Redirector setup          Implant callback via domains      cloudflare DNS      Automatic SSL cert via Caddy      Caddy      Modularity        Updated help menu          Focus on improving the ‚Äòease of use‚Äô      Structure to the help menu      Examples included for most commands        Introduction of a Web Interface          Listener Generation      Callbacks/Interact      Generate implants      Payload list with upload functionality        Fixed callback time not updating with correct time  More documentation here  Optimization of backend stuff  Bug fixesIm going to elaborate on some of the changes in the coming sections.¬†HTTPS ImplantI reworked the structure of the HTTP implants to use a new and more flexible HTTP system. This also enabled me to create an implant that supports HTTPS which improves the OPSEC of project quite a bit. The HTTPS implant can only be used in tandem with the newly introduced Smart Pipe Redirector that supports using domains as the callback address. The Implant itself has the same capabilities as the HTTP implant introduced in update 3.0.Smart Pipe Redirector setupThe Smart Pipe Redirector is the ‚ÄúHeavy hitter‚Äù in this update. It provides the framework with an automated method of provisioning a redirector that uses HTTPS, and greatly reduces the workload for the operator once the initial setup has been completed. The redirector consists of the following parts:  Cloudflare for DNS.  Caddy as the reverse proxy and traffic filtering.  Wireguard connection between the VPS and the C2 server.  Digital Ocean VPS  Terraform as IaCThe redirector needs an initial setup, however after the setup, you will have a fully working redirector provisioned in about 3 minutes. When you exit out of PrimusC2 the redirector will automatically be torn down and all resources will be destroyed. See the docs for information about the setup process.Caddy is the reverse proxy used on this redirector, it takes care of creating an automatic SSL certificate, traffic filtering and redirection of traffic. Caddy is pretty awesome and i plan to make a separate blog post about the redirector setup in the near future.  At the moment Caddy has some basic block lists implemented for User-Agents and IP-Addresses. This is easily configured within the main Caddyfile which is the configuration file that Caddy uses.Below is just a quick snippet of an active HTTPS VPS redirector:And if you visit the site, a benign message is being shown(easily changed) and you can see that it has a valid SSL certificate. Updated help menuThe framework lacked a proper help menu(Thanks Lsecqtüòé) that helped new operators understand the functionality and the intended uses of different commands. So i went ahead and created a help menu for all the commands available at this time.An example of the new help menu in action:If you have feedback or suggestions, please reach out!WebinterfaceAnother big addition is the introduction of a web interface. The interface makes the framework more simple to use and provides a better overview. I am by no means skilled in website development, so it‚Äôs not the most stable, cool or best-practice interface. I tried to go for a simplistic look with a all the basic features available in this first iteration. In the future i would love to add more functionality and control to the web interface. The current iteration consists of the following parts:  Home  Listener  Callbacks  PayloadsA short walkthrough of the new interface can be seen below:CreditA colleague of mine  is on his Python learning journey. I tasked him with writing me a simple Python script, that would auto-generate me some Star Wars related names. He created a cool function that i could use in the pwsh_cradle command üòéConclusionThis update introduces some pretty significant additions to the framework and certainly helps with improving the maturity of the project. With the new redirector setup and the HTTPS implant a whole new lane of opportunity has opened up and im excited to built upon it in the future. The introduction of the help menu and the web interface helps with improving the accessibility of the framework and hopefully makes it more pleasant to use. A lot of small changes have been made to the backend as well. However one of my next big goals is to rewrite the backend so it uses a proper database instead of everything living in confusing Lists, Dicts strings etc üò≠.This is it for now. I hope that you will enjoy the update, and I would love to hear your feedback or answer any questions that you might have.Thanks for reading, and have an excellent day.Roadmap  Execute-Assembly  Encryption of data streams  Implementation of smart pipe redirectors with automation  Download functionality for the implant  Upload functionality for the implant  Directory operations  HTTP C2 channel  Improve OPSEC  Rework backend to accomodate a database for persistant storage  Evasion techniques  Custom Term Rewriting Macro¬†¬†"
  },
  
  {
    "title": "PrimusC2 - New Release | Update 3.0",
    "url": "/posts/PrimusC2_update_3.0/",
    "categories": "PrimusC2, updates",
    "tags": "AD, Red Team, C2, PrimusC2, ExecuteAssembly",
    "date": "2023-12-24 00:00:00 +0100",
    





    
    "snippet": "I am very happy to have this new update of PrimusC2 released. I have completed a lot of the tasks on the roadmap and made more Qol stuff that makes the C2 more nice to use and work with!PrimusC2 Gi...",
    "content": "I am very happy to have this new update of PrimusC2 released. I have completed a lot of the tasks on the roadmap and made more Qol stuff that makes the C2 more nice to use and work with!PrimusC2 Github linkWhat‚Äôs new:  HTTP based implant üòé¬†          Execute .NET Assembly in memory      Registry persistance capability      Download of files from target      Callback interval(Sleep) adjustable      Server a static webpage if browsing to ‚Äò/‚Äô of the C2 server      STABILLITY        RC4 encryption of data streams on HTTP implant  Revamp of pwsh_cradle functionality  Quality of life stuff          Autocomplete commands improvements      Payload directory listing      Network interface autocomplete      Add payloads from Payload folder to autocomeplete automatically      Payload server now serving the files from the Payloads folder      Include AMSI status on callback      Updated command names        Updated requirements.txtIm going to elaborate on some of the changes in the coming sections.¬†HTTP ImplantFor a long time, it‚Äôs been on my to-do list to develop an HTTP-based implant. Now it‚Äôs finally become a reality, and it brings a lot of new cool features and improved stability for the implant compared to the TCP-based implant. I have focused on making the code more readable and modular, so it‚Äôs easier to implement features and get a sense of what‚Äôs going on in the code. In the coming section, I will show some of the new functionality.Here is a picture showing of of the new HTTP implant in action üòé¬†The generation of a listener is very simple and smooth with the new automatic and dynamic autocomplete system.RC4 EncryptionAs mentioned above, I have implemented RC4 encryption for all the data streams within the HTTP implant. RC4 is by no means a ‚Äúsecure‚Äù encryption algorithm at all, but it brings some much-needed OPSEC to PrimusC2. There is still a lot of work to be done regarding the OPSEC of the framework, but this is a great step in the right direction.Below is just a quick snippet of how the traffic looks within a packet capture:Stability of execute-ASMExecute-ASM works as intended within the TCP implant; however, it can be very unstable and cause a lot of bugs and trouble when executing. The implementation in the HTTP implant is way more stable, and I have not seen any bugs while testing it myself. This is huge, as the operartor does not need to fear for his life while running Rubeus ü§£Here SharpWMI is executed, firstly with the ‚Äú-h‚Äù command:Afterwards, the command to enumerate which antivirus is running is executed without any issues!DownloadAnother item from the roadmap that I have implemented is the download functionality. It brings the ability for the operator to exfiltrate data with PrimusC2, which is pretty cool!‚ÄúStuff‚Äù exfiltrated to the loot directory:¬†Quality of life and command handlingMy goal is to make the framework ‚Äúnice‚Äù to use, so I will keep on trying to implement small quality of life stuff whenever i can :) I‚Äôve made some improvements to the autocomplete system, and I have implemented several ways to make it more dynamic and make it easier for the operator to ‚Äúautocomplete‚Äù stuff.When generating a listener, PrimusC2 will now look through the available network interfaces on the system and then make them available for autocompletion. The same concept has been applied to the payloads present in the payloads folder. When the server is executed, it will look through the payloads folder and add payloads to the autocomplete list.Another cool feature added is the payloads command, which will do a directory listing of the payloads folder and add the contents to the autocomplete list if any new payloads have been added.ConclusionI hit some pretty big milestones with this update and got the HTTP implant working along with a bunch of cool features. A lot of much-needed stability is also introduced with this update (the HTTP implant). I focused on making the new implant more structured and easier to modify in order to make it easier to implement new features in the future. A lot of bugs still exist and a lot of features could use an overhaul, so i will continue to work on this when i have the time!This is it for now. I hope that you will enjoy the update, and I would love to hear your feedback or answer any questions that you might have.Thanks for reading, and have an excellent day.Roadmap  Execute-Assembly  Inline-Assembly  Encryption of data streams  Implementation of smart pipe redirectors with automation  Download functionality for the implant  Upload functionality for the implant  Directory operations  HTTP C2 channel  Improve OPSEC  Evasion techniques  Custom Term Rewriting Macro¬†¬†"
  },
  
  {
    "title": "PrimusC2 - New Release | Update 2.0",
    "url": "/posts/PrimusC2_update/",
    "categories": "PrimusC2, updates",
    "tags": "AD, Red Team, C2, PrimusC2, ExecuteAssembly",
    "date": "2023-11-19 00:00:00 +0100",
    





    
    "snippet": "I am very happy to have this new update of PrimusC2 released. I have hit some pretty big milestones with the project and done some cool stuff.PrimusC2 Github linkWhat‚Äôs new:  File Operations       ...",
    "content": "I am very happy to have this new update of PrimusC2 released. I have hit some pretty big milestones with the project and done some cool stuff.PrimusC2 Github linkWhat‚Äôs new:  File Operations          cd      ls¬†      pwd        Execute .NET Assembly in memory (HYPE)  Revamp of data transfer between server and implant¬†  Added more exception handling (not bulletproof yet)  Changed how the implant handles commands (no more of accidentally firing of a command)  Quality of life stuff          Command History¬†      Autocomplete Commands¬†        Removed persistence functionality (will implement another version in the future)Im going to elaborate on some of the changes in the coming sections.¬†Execute .NET Assembly¬†This one is huge for me, i wanted from the start to include some more advanced functionality in the C2, to elevate it from being an Advanced Reverse Shell Handler. I have now successfully implemented the execution of .NET assemblies in memory.¬†Here is a short demo of the new functionality in action üòé¬†The functionality for execute assembly has been tested with a couple of popular offensive .NET tools, such as Rubeus, SharpWMI, Seatbelt and so on. The current state of the functionality is still quite unpredictable and can do weird stuff sometimes (still working on that). Large output from tools, seems to break it, and I haven‚Äôt found a proper solution for that yet. However, I am still very pleased with the progress I have made so far.File OperationsPrimusC2 now has some proper directory operations on the machine; it does not rely on PowerShell anymore to do: ls, cd and pwd, this makes it easier to traverse the filesystem and see what goodies that are hidden on the desktop üëÄHere you can see it action:Quality of life and command handlingIve made some small (but nice) quality of life improvements. Ive added command history (Arrow Up/Down) to make it more dynamic, and I have added autocompletion for the native commands in PrimusC2. Furthermore, I have changed the way commands are handled on the implant side. Preivoulsy, when a command was executed from the server side, the implant would try and execute that as a powershell command directly. Now the implant only has unmanaged powershell and can execute commands with Windows CMD as well, but you need to specify either pwsh or shell :)¬†ConclusionMy plan is to keep developing on this when I have the time to make more cool features, but also more stable and less prone to crap out if something goes wrong or the operator mistypes anything. It has turned out that using TCP as a C2 channel can be quite challenging, and sometimes it lives its own life. In the future, I am going to explore HTTP as a C2 channel to perhaps bring more stability to the C2.Big shoutout to all the other nim projects out there, they helped me great deal while working on this update!This is it for now. I hope that you will enjoy the update, and I would love to hear your feedback or answer any questions that you might have.Thanks for reading, and have an excellent day.¬†¬†"
  },
  
  {
    "title": "CRTP Review",
    "url": "/posts/CRTP/",
    "categories": "Certifications, reviews",
    "tags": "AD, Red Team, Certificate",
    "date": "2023-10-11 00:00:00 +0200",
    





    
    "snippet": "I‚Äôm very pleased to announce that I passed the Certified Red Team Professional(CRTP), from Altered Security. It was quite an enjoyable experience, appreciating not only the opportunity to reinforce...",
    "content": "I‚Äôm very pleased to announce that I passed the Certified Red Team Professional(CRTP), from Altered Security. It was quite an enjoyable experience, appreciating not only the opportunity to reinforce my existing knowledge but also the newly gained skills.Throughout this post, I will go through my thoughts about the learning material, the exam experience, and the final conclusion about the certificate itself.The Training Material and LabThe format of the learning material is nothing fancy. You will receive a zip file containing all the files, knowledge, etc. that you need in order to pass the exam. No other resources are required (looking at you, Offsec üëÄ..)If you pay good attention to the videos and complete the lab fully, you should be good to go‚Ä¶.However, there are some prerequisites, imo, in order for this to apply to you:¬†      TAKE notes, and do it thoroughly; this means writing down commands, tool syntaxes, short descriptions of topics, and so on. Finally, this is the deciding factor in whether you will succeed or fail.        Think basic, and rely on your GOOD notes.¬†        Understand enumeration in Active Directory using manual tools like PowerView. But learn to use Bloodhound, this will give you a way better overview and save you a lot of time in the end.  FormatRegarding the format of the learning material, as of right now, the videos that are up-to-date are in the format of four 2-3 hours recordings from the Live bootcamps that they offer. This makes it very hard to track your own progress and can be frustrating at times because the instructor will interact with the live audience (kind of felt like a time waste for me). I am much in favor of the model that TCM offers, with an online platform that has short and to-the-point videos with a progress bar.ContentEven though I disliked the format, I really liked the content and the knowledge presented in the course. It covers everything from simple enumeration in Active Directory to persistence, etc. The instructor does a good job of presenting the content, and it‚Äôs up-to-date. It‚Äôs not run this tool and see the MAGIC output; he actually goes into explaining the concepts and technologies behind the attacks. Thumbs up for that, üëçLab timeThe lab is all-round very well built; it‚Äôs reasonable stable, a BUNCH of attacks are covered, and there is a great lab manual to support your learning (I do encourage to try and complete as much of the lab as possible without using the lab manual). I opted for 30 days of lab time, which was plenty of time for me, but this might be different, if you come into this certification with very little knowledge of Active Directory. If you are really new to AD pentesting, I would recommend going with 60 days to ensure that you have tried all the attacks at least once or twice.The exam and reportingI can‚Äôt say much about the exam experience without violating any NDAs. But the exam itself was in a very stable environment, and the customer support was quick and awesome. You have 24 hours to complete the given exam lab and then 48 hours to complete a written report covering your findings, mitigations, etc. I used around 6 hours to complete the lab (including raw notes and screenshots along the way). For the report, I opted to relax a bit, so I spent around 12 hours on that.I used pwndoc to write my report. I use this tool for all my certifications, as it lets me create a library of findings and custom sections that I can use for the generic findings I discover. It‚Äôs only worth it to use pwndoc, if you keep on building your library of findings, since the tool can‚Äôt generate anything automated for you.ConclusionThis certification is really good if you are just getting started in pentesting Active Directory, a blue teamer who wants to understand AD attacks better, or just a pentester looking to reafirm your skills or perhaps gain a few new ones. I would rate the exam level at easy/medium depending on your expereince level, and i would reccommned to everyone considering taking the certifications just to do it. Buy it, set an exam date for yourself and go nuts in the lab.Good luck and have fun!¬†¬†"
  },
  
  {
    "title": "First Post!",
    "url": "/posts/first_post/",
    "categories": "Informational, Update",
    "tags": "info",
    "date": "2023-09-09 00:00:00 +0200",
    





    
    "snippet": "The first postThis will be my first post on this blog/wiki/anything site. I havent fully decided on what content that i will post here, but i have some ideas. The following things are properly goin...",
    "content": "The first postThis will be my first post on this blog/wiki/anything site. I havent fully decided on what content that i will post here, but i have some ideas. The following things are properly going to show up here at some point:  Updates on the development of my C2 Framework PrimusC2  HTB writeups(of some sort)  More Maldev stuff(as i learn)  Random Offensive Security StuffThanks for the read, if you want to get in contact, feel free to reach out on my socials.Have a good day!"
  }
  
]

